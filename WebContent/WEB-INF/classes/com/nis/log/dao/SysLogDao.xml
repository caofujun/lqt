<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nis.log.dao.SysLogDao">

	<sql id="commCols">
		ID id,UNIT_ID unitId,USER_NAME userName,LOG_AREA logArea,LOG_FUN logFun,LOG_TYPE logType,BUSINESS_ID businessId,CREATE_TIME createTime,LOG_CONTENT logContent
	</sql>

	<insert id="save" parameterType="sysLog" flushCache="true">
		 insert into SYS_LOG(ID,UNIT_ID,USER_NAME,LOG_AREA,LOG_FUN,LOG_TYPE,BUSINESS_ID,CREATE_TIME,LOG_CONTENT)
		 values(#{id},#{unitId},#{userName},#{logArea},#{logFun},#{logType},#{businessId},#{createTime},#{logContent})
	</insert>
	
	<delete id="delete" flushCache="true">
		delete from SYS_LOG
		<where>ID=#{id}</where>
	</delete>
	
	<delete id="deleteSqlLtDate" flushCache="true">
		delete from sys_log
		<where> log_type = #{logType} and create_time &lt; #{date} </where>
	</delete>
	
	<delete id="delSqlLog" flushCache="true">
		delete from sys_log
		<where> log_type = 'sql' </where>
	</delete>
	
	<update id="update" parameterType="sysLog" flushCache="true">
		update SYS_LOG
		<set>
			ID=#{id},UNIT_ID=#{unitId},USER_NAME=#{userName},LOG_AREA=#{logArea},LOG_FUN=#{logFun},LOG_TYPE=#{logType},BUSINESS_ID=#{businessId},CREATE_TIME=#{createTime},LOG_CONTENT=#{logContent}
		</set>
		<where>ID=#{id}</where>
	</update>
	
	<select id="get" resultType="sysLog">
		select <include refid="commCols"/> from SYS_LOG
  		<where>ID=#{id}</where>
	</select>
	
	<select id="findSysLogCount" parameterType="sysLog" resultType="int">
		select count(*) from SYS_LOG
		<where>
			<if test="logType !=null and logType!=''">
	  			and LOG_TYPE=#{logType}
	  		</if>
		</where>
	</select>
	
	<select id="getAll" resultType="sysLog">
		select <include refid="commCols"/> from SYS_LOG
		<where>
		</where>
	</select>

	<select id="findKettleWarning" resultType="dataWarning">
	<![CDATA[
		select tt.* from(
			select distinct 'select * from SYS_LOG where ID ='''||ID||'''' sql,CREATE_TIME,
			'KETTLE接口程序'|| to_char(CREATE_TIME,'yyyy-MM-dd') ||'处理（'||LOG_FUN||'）表数据时发生异常！' as warning from SYS_LOG t
			where LOG_AREA = 'kettle'
			and CREATE_TIME BETWEEN #{queryStartDate} AND #{queryEndDate}
			order by CREATE_TIME desc
	    ) tt
		where rownum <= 100
	]]>
	</select>

	<select id="findMonitorWarning" resultType="dataWarning">
	<![CDATA[
		select tt.* from(
			select distinct 'select * from SYS_LOG where ID ='''||ID||'''' sql,CREATE_TIME,
			'接口或预计处理监测程序（'|| to_char(CREATE_TIME,'yyyy-MM-dd') ||'）发现异常！' as warning from SYS_LOG t
			where LOG_AREA = 'monitor'
			and CREATE_TIME BETWEEN #{queryStartDate} AND #{queryEndDate}
			order by CREATE_TIME desc
	    ) tt
		where rownum <= 100
	]]>
	</select>
	
	<select id="findbyBusinessId" resultType="sysLog">
		select <include refid="commCols"/> from SYS_LOG
  		<where>BUSINESS_ID=#{businessId}</where>
  		order by create_time desc
	</select>
</mapper>
